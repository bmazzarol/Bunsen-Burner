name: SonarCloud
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: |
            6.0.x
            7.0.x
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'zulu'
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          New-Item -Path ./.sonar/scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: pwsh
        run: |
          ./.sonar/scanner/dotnet-sonarscanner begin `
            /k:"bmazzarol_Bunsen-Burner" `
            /o:"bmazzarol" `
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}" `
            /d:sonar.host.url="https://sonarcloud.io" `
            /d:sonar.cs.vstest.reportsPaths=/**/TestResults/*.trx `
            /d:sonar.cs.opencover.reportsPaths=/**/TestResults/**/coverage.opencover.xml `
            /d:sonar.dotnet.excludeTestProjects=true `
            /d:sonar.coverage.exclusions="**Test*.cs,**/Migrations/**/*.*,**autogenerated.cs,**.g.cs"
          
          dotnet test `
            --configuration=Release `
            --verbosity normal `
            --logger "trx" `
            --collect "XPlat Code Coverage" `
            -r "TestResults" `
            -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
          
          ./.sonar/scanner/dotnet-sonarscanner end `
            /d:sonar.login="${{ secrets.SONAR_TOKEN }}"